{"version":3,"file":"bundle.js","sources":["../src/cargarDatos.js","../src/cargarGeneros.js","../src/mostrarDatos.js","../src/index.js"],"sourcesContent":["// Crear una función asincorna para realizar una petición a la API \r\n\r\nconst peliculasPopulares= async ()=>{\r\n        const url= 'https://api.themoviedb.org/3/movie/popular?api_key=c3fbcfa3f23c9ca7c1133c86f1351ca2&language=es-PER&page=1';\r\n        \r\n        const peticion=await fetch(url); //consulta a la API mediante el endpoint \r\n        const datos= await peticion.json(); //guardo los datos\r\n        const peliculas= datos.results;\r\n        const genero= await generosPeliculas();\r\n        \r\n\r\n        peliculas.forEach((element) => {\r\n                let generosPeliculas =ObtenerGenero(element.genre_ids[0], genero);\r\n\r\n                element.genero= generosPeliculas;\r\n        });\r\n\r\n        return peliculas ;\r\n        \r\n}\r\n\r\n// crea una función asincrona para obtener los géneros\r\nconst generosPeliculas =async ()=>{\r\n        const url= 'https://api.themoviedb.org/3/genre/movie/list?api_key=c3fbcfa3f23c9ca7c1133c86f1351ca2&language=es';\r\n\r\n        const peticion=await fetch(url);\r\n        const datos=  await peticion.json();\r\n        return datos.genres;\r\n}\r\n\r\n// función para optener el 1er género\r\nconst ObtenerGenero= (idGenero, generos)=>{\r\n        let nombreGenero;\r\n        generos.forEach((element) => {\r\n                if (idGenero===element.id) {\r\n                        nombreGenero=element.name;\r\n                }\r\n        });\r\n        return nombreGenero;\r\n};\r\n\r\n\r\nexport {peliculasPopulares, generosPeliculas};\r\n        \r\n                \r\n\r\n","import { generosPeliculas } from \"./cargarDatos\";\r\n\r\nconst contenedorFiltroGenero= document.querySelector('#filtro-generos')\r\n\r\nconst filtrosGeneros= async ()=>{\r\n    const genero= await generosPeliculas();\r\n    genero.forEach(element => {\r\n        const btn= document.createElement('button');\r\n        btn.classList.add('btn');\r\n        btn.innerText=element.name\r\n        btn.setAttribute('data-id',element.id);\r\n        contenedorFiltroGenero.append(btn);\r\n    });\r\n    \r\n}\r\nexport {filtrosGeneros}\r\n","// creo una función para cargar y mostar los datos en el DOM \r\n\r\nconst contenedor= document.querySelector('#populares .main__grid');\r\n\r\nconst cargarPeliculas= (datos)=>{\r\n    datos.forEach((element) => {\r\n        const plantillaHTML= `\r\n        <div class=\"main__media\">\r\n            <a href=\"#\" class=\"main__media-thumb\">\r\n                <img class=\"main__media-img\" src='https://image.tmdb.org/t/p/w500/${element.backdrop_path}' alt=\"\" />\r\n            </a>\r\n            <p class=\"main__media-titulo\">${element.title} </p>\r\n            <p class=\"main__media-genero\">${element.genero} </p>\r\n            <p class=\"main__media-fecha\">${element.release_date} </p>    \r\n    `;\r\n        // inserta la plantilla en el contenedor \r\n        contenedor.insertAdjacentHTML('beforeend',plantillaHTML);\r\n    });\r\n    \r\n}\r\n\r\nexport default cargarPeliculas;","import { peliculasPopulares } from \"./cargarDatos\";\r\nimport { filtrosGeneros } from \"./cargarGeneros\";\r\nimport cargarPeliculas from \"./mostrarDatos\";\r\n\r\n// mediante una funciión asincrona muestro los datos\r\n\r\nconst cargarDatos= async ()=>{\r\n    const peliculas=await peliculasPopulares();\r\n    cargarPeliculas(peliculas);\r\n}\r\ncargarDatos();\r\nfiltrosGeneros();\r\n\r\n"],"names":[],"mappings":"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"}