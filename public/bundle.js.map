{"version":3,"file":"bundle.js","sources":["../src/cargarDatos.js","../src/mostrarDatos.js","../src/index.js"],"sourcesContent":["// crear función asincrona para hace la petición a la APIde las películas/populares\r\n\r\nconst cargarDatos= async ()=>{\r\n        try {\r\n                \r\n                const url= 'https://api.themoviedb.org/3/movie/popular?api_key=c3fbcfa3f23c9ca7c1133c86f1351ca2&language=es-PER&page=1';\r\n        \r\n                const respuesta=await fetch(url)  //petición al servidor\r\n                const datos= await respuesta.json(); //guardo los datos obtenidos de la petición \r\n                const generos= await cargarGeneros();\r\n                const peliculasPopulares= datos.results;//guardo el array de objetos\r\n                \r\n                // itero todos el array de las peliculas para obtener todos los id de generos\r\n                peliculasPopulares.forEach((element) => {\r\n                        // console.log(element.genre_ids[0]);\r\n                        element.genero=obtenerGeneros(element.genre_ids[0],generos); //le añado el campo genero \r\n                });\r\n                return peliculasPopulares;\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n}\r\n\r\n// crear una función asincrona para cargar los generos de las peliculas\r\n\r\nconst cargarGeneros= async ()=>{\r\n        try {\r\n                \r\n                const url= 'https://api.themoviedb.org/3/genre/movie/list?api_key=c3fbcfa3f23c9ca7c1133c86f1351ca2&language=es';\r\n                const respuesta= await fetch(url);\r\n                const generos= await respuesta.json();\r\n                return generos.genres;\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n};\r\n\r\nconst obtenerGeneros=(idGeneroPeliculas,generos)=>{\r\n        let nombreGenero;\r\n        generos.forEach((element)=>{\r\n                if (idGeneroPeliculas===element.id) {\r\n                        nombreGenero=element.name;  \r\n                }\r\n        });\r\n        return nombreGenero\r\n}\r\n\r\n\r\nexport {cargarDatos,cargarGeneros};\r\n\r\n","const contenedor= document.querySelector('#populares .main__grid')\r\n\r\nconst mostarDatos= (datos)=>{\r\n    // recorro mi array para insertar y modificar el don \r\n    datos.forEach((element) => {\r\n        console.log(element);\r\n        const pantillaHTML= `\r\n        <div class=\"main__media\"> \r\n            <a href=\"#\" class=\"main__media-thumb\">\r\n                <img class=\"main__media-img\" src=https://image.tmdb.org/t/p/w500/${element.\r\n                    backdrop_path} alt=\"\" />\r\n            </a>\r\n            <p class=\"main__media-titulo\">${element.title}</p>\r\n            <p class=\"main__media-genero\">${element.genero} </p></p>\r\n            <p class=\"main__media-fecha\">${element.release_date} </p></p>\r\n        `;\r\n    contenedor.insertAdjacentHTML('beforeend', pantillaHTML)\r\n    \r\n    });\r\n\r\n}\r\n\r\nexport default mostarDatos;","import  {cargarGeneros,cargarDatos} from \"./cargarDatos\";\r\nimport mostarDatos from \"./mostrarDatos\";\r\n// crar una función asincróna para cargar los datos de la api \r\n\r\nconst datosPopulares= async ()=>{\r\n    const peliculasPopulares=await cargarDatos();\r\n    mostarDatos(peliculasPopulares);\r\n}\r\ndatosPopulares();\r\n\r\n"],"names":[],"mappings":";;AAAA;AACA;AACA,MAAM,WAAW,EAAE,UAAU;AAC7B,QAAQ,IAAI;AACZ;AACA,gBAAgB,MAAM,GAAG,EAAE,4GAA4G,CAAC;AACxI;AACA,gBAAgB,MAAM,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,EAAC;AAChD,gBAAgB,MAAM,KAAK,EAAE,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC;AACpD,gBAAgB,MAAM,OAAO,EAAE,MAAM,aAAa,EAAE,CAAC;AACrD,gBAAgB,MAAM,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC;AACxD;AACA;AACA,gBAAgB,kBAAkB,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AACxD;AACA,wBAAwB,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACpF,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,OAAO,kBAAkB,CAAC;AAC1C,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,gBAAgB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnC,SAAS;AACT,EAAC;AACD;AACA;AACA;AACA,MAAM,aAAa,EAAE,UAAU;AAC/B,QAAQ,IAAI;AACZ;AACA,gBAAgB,MAAM,GAAG,EAAE,oGAAoG,CAAC;AAChI,gBAAgB,MAAM,SAAS,EAAE,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AAClD,gBAAgB,MAAM,OAAO,EAAE,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC;AACtD,gBAAgB,OAAO,OAAO,CAAC,MAAM,CAAC;AACtC,SAAS,CAAC,OAAO,KAAK,EAAE;AACxB,gBAAgB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnC,SAAS;AACT,CAAC,CAAC;AACF;AACA,MAAM,cAAc,CAAC,CAAC,iBAAiB,CAAC,OAAO,GAAG;AAClD,QAAQ,IAAI,YAAY,CAAC;AACzB,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG;AACnC,gBAAgB,IAAI,iBAAiB,GAAG,OAAO,CAAC,EAAE,EAAE;AACpD,wBAAwB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;AAClD,iBAAiB;AACjB,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,YAAY;AAC3B;;AC7CA,MAAM,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,wBAAwB,EAAC;AAClE;AACA,MAAM,WAAW,EAAE,CAAC,KAAK,GAAG;AAC5B;AACA,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC/B,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7B,QAAQ,MAAM,YAAY,EAAE,CAAC;AAC7B;AACA;AACA,iFAAiF,EAAE,OAAO;AAC1F,oBAAoB,aAAa,CAAC;AAClC;AACA,0CAA0C,EAAE,OAAO,CAAC,KAAK,CAAC;AAC1D,0CAA0C,EAAE,OAAO,CAAC,MAAM,CAAC;AAC3D,yCAAyC,EAAE,OAAO,CAAC,YAAY,CAAC;AAChE,QAAQ,CAAC,CAAC;AACV,IAAI,UAAU,CAAC,kBAAkB,CAAC,WAAW,EAAE,YAAY,EAAC;AAC5D;AACA,KAAK,CAAC,CAAC;AACP;AACA;;AClBA;AACA;AACA,MAAM,cAAc,EAAE,UAAU;AAChC,IAAI,MAAM,kBAAkB,CAAC,MAAM,WAAW,EAAE,CAAC;AACjD,IAAI,WAAW,CAAC,kBAAkB,CAAC,CAAC;AACpC,EAAC;AACD,cAAc,EAAE;;"}